let x: Nat = 3
let y: Nat = 5
let q: Nat = 0
let z: Nat = x + y + q + 3 + 4

let z': Nat = y + (fun (x : Nat ) -> 0) (0) + q + 3 + 4
let k: Nat = (fun (x : Nat ) -> 0) (0) - 0
let j: Nat = 0 + (fun (x : Nat ) -> 0) (0) + y + 0

let m: Nat = ifz q then 4 else 5

let n: Nat = ifz z then 4 else 5

let t: Nat =
  let a: Nat = 3
  in let b: Nat = print "sfsdf" (5 + 6 +  5)
     in ifz z then 4 else 5

let p: Nat =
  let f (x: Nat): Nat = x + 2
  in let b: Nat = print "sfsdf" (f (5 + 6 +  5))
     in ifz z then 4 else b

let a: Nat =
  let f (x: Nat): Nat = x + 2
  in let g (x: Nat): Nat = f ((f x) + 2)
     in let a: Nat = g (5 + 6 +  5)
        in ifz z then 0 else a

let b: Nat =
  let f (x: Nat): Nat = (x + 2) - 5 - 3 - 15
  in let g (x: Nat): Nat = f (f (f (f (f ((f x) + 2)))))
     in g (5 + 6 +  5)